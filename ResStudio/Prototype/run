#! /bin/bash

outfile=./temp/test_task_gen.out
# params:   p q N Nb nb
ipn=3
P=3
p=1;q=3
nt=2
DLB=1
N=1350
#params[1]="$p $q 768 8 2 $nt $DLB $ipn 100"

if test $1 -ne 0
then 
    rm ./temp/a.txt
    rm -R ./temp/out*/* 
    rmdir ./temp/out*
fi
if test $2 -ne 0
then 
    rm ./temp/test_task* 
    make TINTININTELMPI=1 POST_RECV=1 task_gen 

fi
if test $3 -ne 0
then 
    rm b.txt
    for j in K # L M N O P Q R S T U 
    do
	for i in 1
	do	#--report-bindings --bysocket  --bind-to-socket -npernode $ipn
	    tmpdir="./temp/out$i$j-DLB-$DLB"
	    mkdir -p $tmpdir
	    params[1]="$p $q $N 10 5 $nt $DLB $ipn $tmpdir 50"
	    time mpirun -n $P  -npernode $ipn --output-filename $outfile ./temp/test_task_gen ${params[$i]} 
	    echo "$i$j-DLB-$DLB">>./temp/a.txt
	    
	    grep "error" ${outfile}* >>./temp/a.txt
	    grep -i  "ProgramExec" ${outfile}*
	    mv ${outfile}* $tmpdir
	    mv *log_file*.txt $tmpdir
	    for node in $(seq 0 $[$P-1]) 
	    do
		if test  $node -lt 10 ;then  nodenum="0${node}" ;fi
		if test  $node -ge 10 ;then  nodenum="${node}"  ;fi
		mkdir -p $tmpdir/node-${nodenum}
		grep "@stats" $tmpdir/test_task_gen.out*.$node  >>  $tmpdir/statistics.txt
		
		mv $tmpdir/dt_*_file-${nodenum}.txt  $tmpdir/node-${nodenum}/
		mv $tmpdir/sg_log_file-${nodenum}.txt  $tmpdir/node-${nodenum}/
		grep -c "timedout" $tmpdir/test_task_gen.out*.$node   
	    done 
	    cat  ./temp/a.txt
	done
    done 
fi
